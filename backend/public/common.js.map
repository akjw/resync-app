{"version":3,"sources":["./src/app/departments/dept.service.ts","./src/app/organizations/org.service.ts","./src/app/employees/emp.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\ninterface DeptInfo {\n  description: string;\n  organization: string;\n  workingTime: string;\n  workingDays: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeptService {\n\n  token = localStorage.getItem('token');\n  constructor(private http: HttpClient) { }\n\n  getDepartments() {\n    return this.http.get<any>(`api/departments`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  getMonthDepts() {\n    return this.http.get<any>(`api/departments/month`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  getYearDepts() {\n    return this.http.get<any>(`api/departments/year`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  getOrgDepts(id: string){\n    return this.http.get<any>(`api/departments/organization/${id}`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  addDept(info: DeptInfo){\n    return this.http\n    .post<any>(`api/departments/new`, info, { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  getDept(id: string){\n    return this.http.get<any>(`api/departments/${id}`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  editDept(id: string, info: any){\n    return this.http\n    .put<any>(`api/departments/${id}`, info, { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  deleteDept(id: string){\n    return this.http.delete<any>(`api/departments/${id}`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\ninterface OrgInfo {\n  name: string;\n  address: string;\n  city: string;\n  state: string;\n  country: string;\n\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrgService {\n  \n  token = localStorage.getItem('token');\n  constructor(private http: HttpClient) { }\n\n  getOrganizations() {\n    return this.http.get<any>(`api/organizations`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n\n  getMonthOrgs() {\n    return this.http.get<any>(`api/organizations/month`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  getYearOrgs() {\n    return this.http.get<any>(`api/organizations/year`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  addOrg(info: OrgInfo){\n    return this.http\n    .post<any>(`api/organizations/new`, info, { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  getOrg(id: string){\n    return this.http.get<any>(`api/organizations/${id}`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  editOrg(id: string, info: OrgInfo){\n    return this.http\n    .put<any>(`api/organizations/${id}`, info, { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  deleteOrg(id: string){\n    return this.http.delete<any>(`api/organizations/${id}`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\ninterface EmpInfo {\n  firstName: string;\n  lastName: string;\n  dob: string;\n  organization: string;\n  department: string;\n  workTitle: string;\n  totalExperience: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpService {\n\n  token = localStorage.getItem('token');\n  constructor(private http: HttpClient) { }\n\n\n  getEmployees() {\n    return this.http.get<any>(`api/employees`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n\n  getMonthEmps() {\n    return this.http.get<any>(`api/employees/month`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  getYearEmps() {\n    return this.http.get<any>(`api/employees/year`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  addEmp(info: EmpInfo){\n    return this.http\n    .post<any>(`api/employees/new`, info, { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  getEmp(id: string){\n    return this.http.get<any>(`api/employees/${id}`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  editEmp(id: string, info: EmpInfo){\n    return this.http\n    .put<any>(`api/employees/${id}`, info, { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n\n  deleteEmp(id: string){\n    return this.http.delete<any>(`api/employees/${id}`,  { headers: {\n      \"x-auth-token\": this.token,\n    }})\n  }\n}\n"],"sourceRoot":"webpack:///"}