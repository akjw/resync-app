{"version":3,"sources":["./src/app/departments/departments-routing.module.ts","./src/app/departments/dept-edit/dept-edit.component.ts","./src/app/departments/dept-edit/dept-edit.component.html","./src/app/departments/departments.module.ts","./src/app/departments/dept-list/dept-list.component.ts","./src/app/departments/dept-list/dept-list.component.html","./src/app/departments/dept-new/dept-new.component.ts","./src/app/departments/dept-new/dept-new.component.html"],"names":[],"mappings":"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","file":"departments-departments-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DeptListComponent } from './dept-list/dept-list.component';\nimport { DeptNewComponent } from './dept-new/dept-new.component';\nimport { DeptEditComponent } from './dept-edit/dept-edit.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    children: [\n      { path: '', component: DeptListComponent, pathMatch: 'full'},\n      { path: 'new', component: DeptNewComponent },\n      { path: ':id', component: DeptEditComponent }\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DepartmentsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DeptService } from '../dept.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\ninterface Dept {\n  _id: string;\n  description: string;\n  owner: string;\n  workingTime: string;\n  workingDays: string;\n}\n\n@Component({\n  selector: 'app-dept-edit',\n  templateUrl: './dept-edit.component.html',\n  styleUrls: ['./dept-edit.component.css']\n})\nexport class DeptEditComponent implements OnInit {\n  description = '';\n  workingDays = '';\n  workingTime = '';\n  id: string;\n  dept: Dept;\n\n  authForm = new FormGroup({\n    description: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    owner: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    workingTime: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    workingDays: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n  });\n\n  constructor(\n    private deptService: DeptService,\n    private router: Router,\n    private actRoute: ActivatedRoute\n  ) { \n    this.id = this.actRoute.snapshot.params.id;\n  }\n\n  ngOnInit(): void {\n    this.deptService.getDept(this.id)\n    .subscribe((dept) => {\n      this.populateForm(dept.department)\n    })\n  }\n\n  populateForm(dept){\n    this.authForm.patchValue({\n      description: dept.description,\n      owner: dept.owner,\n      workingDays: dept.workingDays,\n      workingTime: dept.workingTime,\n    })\n  }\n\n  onSubmit() {\n    if(this.authForm.invalid){\n      return;\n    }\n    this.deptService.editDept(this.id, this.authForm.value).subscribe({\n      next: () => {\n        this.router.navigateByUrl('/departments')\n      },\n      error: (err) => {\n        this.authForm.setErrors({\n          unknownError: true\n        });\n        \n      }\n    });\n  }\n\n}\n","<h3>Edit Department</h3>\n<form (ngSubmit)=\"onSubmit()\" class=\"ui form\" [formGroup]=\"authForm\">\n  <app-input inputType=\"text\" label=\"Description\" [control]=\"authForm.get('description')\"></app-input>\n  <app-input inputType=\"text\" label=\"Owner\" [control]=\"authForm.get('owner')\"></app-input>\n  <app-input inputType=\"text\" label=\"Working Days\" [control]=\"authForm.get('workingDays')\"></app-input>\n  <app-input inputType=\"text\" label=\"Working Time\" [control]=\"authForm.get('workingTime')\"></app-input>\n  \n \n\n  <div *ngIf=\"authForm.errors\" \n  class=\"ui red basic label\">\n    <p *ngIf=\"authForm.errors.noConnection\">\n      No internet connection\n    </p >\n    <p *ngIf=\"authForm.errors.unknownError\">\n      Submission failed. Please try again later.\n    </p >\n  </div>\n\n  <div>\n    <button class=\"ui submit button primary\">\n      Save\n    </button>\n  </div>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { DepartmentsRoutingModule } from './departments-routing.module';\nimport { DeptListComponent } from './dept-list/dept-list.component';\nimport { DeptNewComponent } from './dept-new/dept-new.component';\nimport { DeptEditComponent } from './dept-edit/dept-edit.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [DeptListComponent, DeptNewComponent, DeptEditComponent],\n  imports: [\n    CommonModule,\n    DepartmentsRoutingModule,\n    SharedModule,\n    ReactiveFormsModule\n  ]\n})\nexport class DepartmentsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DeptService } from '../dept.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dept-list',\n  templateUrl: './dept-list.component.html',\n  styleUrls: ['./dept-list.component.css']\n})\nexport class DeptListComponent implements OnInit {\n  data = [];\n  headers = [\n    {key: 'description', label: 'Description'},\n    {key: 'owner', label: 'Owner'},\n    {key: 'organization', label: 'Organization'},\n    {key: 'workingTime', label: 'Working Time'},\n    {key: 'workingDays', label: 'Working Days'},\n  ];\n\n\n  constructor(private deptService: DeptService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.deptService.getDepartments()\n     .subscribe((depts) => {\n       this.data = depts.departments;\n     })\n  }\n\n  deleteHandler(id){\n    var result = confirm(\"Delete this department?\");\n    if (result) {\n      this.deptService.deleteDept(id)\n      .subscribe(() => this.deptService.getDepartments().subscribe((depts) => {\n        this.data = depts.departments;\n      }))\n    }\n  }\n\n}\n","<h1>Departments</h1>\n<a routerLink=\"/departments/new\" class=\"ui button primary\">New</a>\n\n<table classNames=\"striped celled\"  class=\"ui table\">\n  <thead>\n    <tr>\n      <th>\n        Description\n      </th>\n      <th>\n        Owner\n      </th>\n      <th>\n        Organization\n      </th>\n      <th>\n        Working Time\n      </th>\n      <th>\n        Working Days\n      </th>\n      <th>\n        Misc. Actions\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let record of data\">\n      <td>\n        {{ record.description }}\n      </td>\n      <td>\n        {{ record.owner }}\n      </td>\n      <td>\n        {{ record.organization.name }}\n      </td>\n      <td>\n        {{ record.workingTime }}\n      </td>\n      <td>\n        {{ record.workingDays }}\n      </td>\n      <td>\n        <div class=\"ui buttons small\">\n          <a class=\"ui button\" [routerLink]=\"record._id\">Edit</a>\n          <button class=\"ui button\" [id]=\"record._id\" (click)=\"deleteHandler(record._id)\" >Delete</button>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DeptService } from '../dept.service';\nimport { OrgService } from '../../organizations/org.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dept-new',\n  templateUrl: './dept-new.component.html',\n  styleUrls: ['./dept-new.component.css']\n})\nexport class DeptNewComponent implements OnInit {\n\n  data = [];\n\n  authForm = new FormGroup({\n    description: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    owner: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    organization: new FormControl('', [\n      Validators.required,\n    ]),\n    workingTime: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    workingDays: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n  });\n\n  constructor(\n    private deptService: DeptService,\n    private orgService: OrgService,\n    private router: Router \n  ) { }\n\n  ngOnInit(): void {\n    this.orgService.getOrganizations()\n     .subscribe((orgs) => {\n       this.data = orgs.organizations;\n     })\n  }\n\n  onSubmit() {\n    if(this.authForm.invalid){\n      return;\n    }\n    this.deptService.addDept(this.authForm.value).subscribe({\n      next: () => {\n        this.router.navigateByUrl('/departments')\n      },\n      error: (err) => {\n        this.authForm.setErrors({\n          unknownError: true\n        });\n        \n      }\n    });\n  }\n\n}\n","<h3>Add Department</h3>\n<form (ngSubmit)=\"onSubmit()\" class=\"ui form\" [formGroup]=\"authForm\">\n  <app-input inputType=\"text\" label=\"Description\" [control]=\"authForm.get('description')\"></app-input>\n  <app-input inputType=\"text\" label=\"Owner\" [control]=\"authForm.get('owner')\"></app-input>\n\n  <div class=\"required field\">\n    <label>Organization</label>\n    <select class=\"ui dropdown\" [formControl]=\"authForm.get('organization')\">\n      <option value=\"\" disabled>Select Organization</option>\n      <option value=\"\" disabled *ngIf=\"!data.length\">No organizations available. Please create an organization first.</option>\n      <option  *ngFor=\"let record of data\" class=\"item\" [value]=\"record._id\">{{ record.name }}</option>\n    </select>\n  </div>\n \n  <app-input inputType=\"text\" label=\"Working Days\" [control]=\"authForm.get('workingDays')\"></app-input>\n  <app-input inputType=\"text\" label=\"Working Time\" [control]=\"authForm.get('workingTime')\"></app-input>\n  \n \n\n  <div *ngIf=\"authForm.errors\" \n  class=\"ui red basic label\">\n    <p *ngIf=\"authForm.errors.noConnection\">\n      No internet connection\n    </p >\n    <p *ngIf=\"authForm.errors.unknownError\">\n      Submission failed. Please try again later.\n    </p >\n  </div>\n\n  <div>\n    <button class=\"ui submit button primary\">\n      Submit\n    </button>\n  </div>\n</form>\n"],"sourceRoot":"webpack:///"}