{"version":3,"sources":["./src/app/employees/employees-routing.module.ts","./src/app/employees/emp-edit/emp-edit.component.ts","./src/app/employees/emp-edit/emp-edit.component.html","./src/app/employees/employees.module.ts","./src/app/employees/emp-new/emp-new.component.ts","./src/app/employees/emp-new/emp-new.component.html","./src/app/employees/emp-list/emp-list.component.ts","./src/app/employees/emp-list/emp-list.component.html"],"names":[],"mappings":"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","file":"employees-employees-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmpListComponent } from './emp-list/emp-list.component';\nimport { EmpNewComponent } from './emp-new/emp-new.component';\nimport { EmpEditComponent } from './emp-edit/emp-edit.component';\n\nconst routes: Routes = [\n  { \n    path: '', \n    children: [\n      { path: '', component: EmpListComponent, pathMatch: 'full'},\n      { path: 'new', component: EmpNewComponent },\n      { path: ':id', component: EmpEditComponent }\n    ],\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeesRoutingModule { }\n","import { Component, OnInit } from '@angular/core';import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DeptService } from '../../departments/dept.service';\nimport { EmpService } from '../emp.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe, formatDate } from '@angular/common';\n\ninterface Emp {\n  firstName: string;\n  lastName: string;\n  dob: string;\n  department: string;\n  workTitle: string;\n  totalExperience: string;\n}\n\n\n@Component({\n  selector: 'app-emp-edit',\n  templateUrl: './emp-edit.component.html',\n  styleUrls: ['./emp-edit.component.css']\n})\nexport class EmpEditComponent implements OnInit {\n  data = [];\n  organization: string;\n  id: string;\n  emp: Emp;\n\n  authForm = new FormGroup({\n    firstName: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    lastName: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    dob: new FormControl('', [\n      Validators.required,\n    ]),\n    department: new FormControl('', [\n      Validators.required,\n    ]),\n    workTitle: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    totalExperience: new FormControl(0, [\n      Validators.required,\n      Validators.pattern(/^[.0-9]+$/)\n    ]),\n  });\n\n\n  constructor(\n    private deptService: DeptService,\n    private empService: EmpService,\n    private router: Router,\n    private actRoute: ActivatedRoute\n  ) { \n    this.id = this.actRoute.snapshot.params.id;\n  }\n\n  ngOnInit(): void {\n    this.empService.getEmp(this.id)\n    .subscribe((emp) => {\n        console.log('org id', emp.employee.organization)\n    this.deptService.getOrgDepts(emp.employee.organization._id).subscribe((dept) => {\n      this.data = dept.departments\n      console.log('data', this.data)\n    })\n      this.populateForm(emp.employee)\n      console.log('emp data', emp.employee)\n    })\n  }\n\n  populateForm(emp){\n    this.authForm.patchValue({\n      firstName: emp.firstName,\n      lastName: emp.lastName,\n      dob: formatDate(emp.dob, 'yyyy-MM-dd', 'en-Sg'),\n      department: emp.department._id,\n      workTitle: emp.workTitle,\n      totalExperience: emp.totalExperience\n    })\n  }\n\n  onSubmit() {\n    if(this.authForm.invalid){\n      return;\n    }\n    this.empService.editEmp(this.id, this.authForm.value).subscribe({\n      next: () => {\n        this.router.navigateByUrl('/employees')\n      },\n      error: (err) => {\n        this.authForm.setErrors({\n          unknownError: true\n        });\n        \n      }\n    });\n  }\n\n}\n","<h3>Edit Employee</h3>\n<form (ngSubmit)=\"onSubmit()\" class=\"ui form\" [formGroup]=\"authForm\">\n  <app-input inputType=\"text\" label=\"First Name\" [control]=\"authForm.get('firstName')\"></app-input>\n  <app-input inputType=\"text\" label=\"Last Name\" [control]=\"authForm.get('lastName')\"></app-input>\n\n  <div class=\"required field\">\n      <label>Date of Birth</label>\n      <input type=\"date\" [formControl]=\"authForm.get('dob')\"/>\n  </div>\n \n  <div class=\"required field\">\n    <label>Department</label>\n    <select class=\"ui dropdown\" [formControl]=\"authForm.get('department')\">\n      <option value=\"\" disabled>Select Department</option>\n      <option  *ngFor=\"let record of data\" class=\"item\" [value]=\"record._id\">{{ record.description }}</option>\n    </select>\n\n  </div>\n\n \n  <app-input inputType=\"text\" label=\"Work Title\" [control]=\"authForm.get('workTitle')\"></app-input>\n  <app-input inputType=\"text\" label=\"Total Years of Experience (Please enter numeric characters only [0-9])\" [control]=\"authForm.get('totalExperience')\"></app-input>\n\n\n  <div *ngIf=\"authForm.errors\" \n  class=\"ui red basic label\">\n    <p *ngIf=\"authForm.errors.noConnection\">\n      No internet connection\n    </p >\n    <p *ngIf=\"authForm.errors.unknownError\">\n      Submission failed. Please try again later.\n    </p >\n  </div>\n\n  <div>\n    <button class=\"ui submit button primary\">\n      Save\n    </button>\n  </div>\n</form>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { EmployeesRoutingModule } from './employees-routing.module';\nimport { EmpEditComponent } from './emp-edit/emp-edit.component';\nimport { EmpNewComponent } from './emp-new/emp-new.component';\nimport { EmpListComponent } from './emp-list/emp-list.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [EmpEditComponent, EmpNewComponent, EmpListComponent],\n  imports: [\n    CommonModule,\n    EmployeesRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class EmployeesModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DeptService } from '../../departments/dept.service';\nimport { OrgService } from '../../organizations/org.service';\nimport { EmpService } from '../emp.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-emp-new',\n  templateUrl: './emp-new.component.html',\n  styleUrls: ['./emp-new.component.css']\n})\nexport class EmpNewComponent implements OnInit {\n  orgData = [];\n  deptData = [];\n\n  authForm = new FormGroup({\n    firstName: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    lastName: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    dob: new FormControl('', [\n      Validators.required,\n    ]),\n    organization: new FormControl('', [\n      Validators.required,\n    ]),\n    department: new FormControl('', [\n      Validators.required,\n    ]),\n    workTitle: new FormControl('', [\n      Validators.required,\n      Validators.pattern(/^[A-Za-z0-9- ]+$/)\n    ]),\n    totalExperience: new FormControl(0, [\n      Validators.required,\n      Validators.pattern(/^[.0-9]+$/)\n    ]),\n  });\n\n  constructor(\n    private deptService: DeptService,\n    private orgService: OrgService,\n    private empService: EmpService,\n    private router: Router \n  ) { }\n\n  ngOnInit(): void {\n    this.orgService.getOrganizations()\n    .subscribe((orgs) => {\n      this.orgData = orgs.organizations;\n    })\n  }\n\n  onOrgSelect(e) {\n    console.log('event', e)\n    console.log('taregt', e.target.value)\n    this.deptService.getOrgDepts(e.target.value)\n      .subscribe((depts) => {\n        this.deptData = depts.departments;\n      })\n  }\n\n  onSubmit() {\n    if(this.authForm.invalid){\n      return;\n    }\n    this.empService.addEmp(this.authForm.value).subscribe({\n      next: () => {\n        this.router.navigateByUrl('/employees')\n      },\n      error: (err) => {\n        this.authForm.setErrors({\n          unknownError: true\n        });\n        \n      }\n    });\n  }\n\n}\n","<h3>Add Employee</h3>\n<form (ngSubmit)=\"onSubmit()\" class=\"ui form\" [formGroup]=\"authForm\">\n  <app-input inputType=\"text\" label=\"First Name\" [control]=\"authForm.get('firstName')\"></app-input>\n  <app-input inputType=\"text\" label=\"Last Name\" [control]=\"authForm.get('lastName')\"></app-input>\n\n  <div class=\"required field\">\n      <label>Date of Birth</label>\n      <input type=\"date\" [formControl]=\"authForm.get('dob')\"/>\n  </div>\n\n  <div class=\"required field\">\n    <label>Organization</label>\n    <select class=\"ui dropdown\" [formControl]=\"authForm.get('organization')\" (change)=\"onOrgSelect($event)\">\n      <option value=\"\" disabled>Select Organization</option>\n      <option  *ngFor=\"let record of orgData\" class=\"item\" [value]=\"record._id\">{{ record.name }}</option>\n    </select>\n  </div>\n \n  <div class=\"required field\">\n    <label>Department</label>\n    <select class=\"ui dropdown\" [formControl]=\"authForm.get('department')\" [disabled]=\"!deptData\">\n      <option value=\"\" disabled>Select Department</option>\n      <option value=\"\" disabled *ngIf=\"!deptData.length\">No departments available. Choose another organization.</option>\n      <option  *ngFor=\"let record of deptData\" class=\"item\" [value]=\"record._id\">{{ record.description }}</option>\n    </select>\n\n  </div>\n\n \n  <app-input inputType=\"text\" label=\"Work Title\" [control]=\"authForm.get('workTitle')\"></app-input>\n  <app-input inputType=\"text\" label=\"Total Years of Experience (Please enter numeric characters only [0-9])\" [control]=\"authForm.get('totalExperience')\"></app-input>\n\n\n  <div *ngIf=\"authForm.errors\" \n  class=\"ui red basic label\">\n    <p *ngIf=\"authForm.errors.noConnection\">\n      No internet connection\n    </p >\n    <p *ngIf=\"authForm.errors.unknownError\">\n      Submission failed. Please try again later.\n    </p >\n  </div>\n\n  <div>\n    <button class=\"ui submit button primary\">\n      Submit\n    </button>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { EmpService } from '../emp.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-emp-list',\n  templateUrl: './emp-list.component.html',\n  styleUrls: ['./emp-list.component.css']\n})\nexport class EmpListComponent {\n  data = [];\n  constructor(private empService: EmpService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.empService.getEmployees()\n    .subscribe((emps) => {\n      this.data = emps.employees;\n      console.log(this.data)\n    })\n  }\n\n  deleteHandler(id){\n    var result = confirm(\"Delete this employee?\");\n    if (result) {\n      this.empService.deleteEmp(id)\n      .subscribe(() => this.empService.getEmployees().subscribe((emps) => {\n        this.data = emps.employees;\n      }))\n    }\n  }\n\n}\n","<h1>Employees</h1>\n<a routerLink=\"/employees/new\" class=\"ui button primary\">New</a>\n\n<table classNames=\"striped celled\"  class=\"ui table\">\n  <thead>\n    <tr>\n      <th>\n        First Name\n      </th>\n      <th>\n        Last Name\n      </th>\n      <th>\n        D.O.B\n      </th>\n      <th>\n        Organization\n      </th>\n      <th>\n        Department\n      </th>\n      <th>\n        Work Title\n      </th>\n      <th>\n        Total Experience\n      </th>\n      <th>\n        Misc. Actions\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let record of data\">\n      <td>\n        {{ record.firstName  }}\n      </td>\n      <td>\n        {{ record.lastName }}\n      </td>\n      <td>\n        {{ record.dob | date: \"dd MMM yyyy\" }}\n      </td>\n      <td>\n        {{ record.organization.name }}\n      </td>\n      <td>\n        {{ record.department.description }}\n      </td>\n      <td>\n        {{ record.workTitle }}\n      </td>\n      <td>\n        {{ record.totalExperience }}\n      </td>\n      <td>\n        <div class=\"ui buttons small\">\n          <a class=\"ui button\" [routerLink]=\"record._id\">Edit</a>\n          <button class=\"ui button\" [id]=\"record._id\" (click)=\"deleteHandler(record._id)\" >Delete</button>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n"],"sourceRoot":"webpack:///"}